#ifndef TOK
#define TOK(ID)
#endif

#ifndef PUNCTUATOR
#define PUNCTUATOR(ID, SP) TOK(ID)
#endif

#ifndef KEYWORD
#define KEYWORD(ID, FLAG) TOK(kw_## ID)
#endif

TOK(unknown)                // Not a token
TOK(eof)                    // End of file
TOK(identifier)             // abcde123
TOK(integerLiteral)         // 123, 123b 123H
TOK(stringLiteral)          // "foo" 'foo'

PUNCTUATOR(plus,                 "+")
PUNCTUATOR(minus,                "-")
PUNCTUATOR(star,                 "*")
PUNCTUATOR(slash,                "/")
PUNCTUATOR(colonequal,           ":=")
PUNCTUATOR(period,               ".")
PUNCTUATOR(comma,                ",")
PUNCTUATOR(semi,                 ";")
PUNCTUATOR(colon,                ":")
PUNCTUATOR(equal,                "=")
PUNCTUATOR(hash,                 "#")
PUNCTUATOR(less,                 "<")
PUNCTUATOR(greater,              ">")
PUNCTUATOR(lessequal,            "<=")
PUNCTUATOR(greaterequal,         ">=")
PUNCTUATOR(lparen,               "(")
PUNCTUATOR(rparen,               ")")

KEYWORD(and,        KEYALL)
KEYWORD(begin,      KEYALL)
KEYWORD(const,      KEYALL)
KEYWORD(div,        KEYALL)
KEYWORD(do,         KEYALL)
KEYWORD(end,        KEYALL)
KEYWORD(else,       KEYALL)
KEYWORD(from,       KEYALL)
KEYWORD(if,         KEYALL)
KEYWORD(import,     KEYALL)
KEYWORD(mod   ,     KEYALL)
KEYWORD(module,     KEYALL)
KEYWORD(not,        KEYALL)
KEYWORD(or,         KEYALL)
KEYWORD(procedure,  KEYALL)
KEYWORD(return,     KEYALL)
KEYWORD(then,       KEYALL)
KEYWORD(var,        KEYALL)
KEYWORD(while,      KEYALL)

#undef KEYWORD
#undef PUNCTUATOR
#undef TOK